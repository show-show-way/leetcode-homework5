import java.util.*;

public class Solution {
    public boolean wordBreak(String s, List<String> wordDict) {
        boolean[] dp = new boolean[s.length() + 1];
        Set<String> dict = new HashSet<>(wordDict);
        dp[0] = true; // An empty string is always segmentable

        for (int i = 1; i <= s.length(); i++) {
            for (int j = 0; j < i; j++) {
                if (dp[j] && dict.contains(s.substring(j, i))) {
                    dp[i] = true;
                    break; // No need to check further if one valid split is found
                }
            }
        }
        
        return dp[s.length()];
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        List<String> wordDict1 = Arrays.asList("leet", "code");
        System.out.println(solution.wordBreak("leetcode", wordDict1)); // Output: true

        List<String> wordDict2 = Arrays.asList("apple", "pen");
        System.out.println(solution.wordBreak("applepenapple", wordDict2)); // Output: true

        List<String> wordDict3 = Arrays.asList("cats", "dog", "sand", "and", "cat");
        System.out.println(solution.wordBreak("catsandog", wordDict3)); // Output: false
    }
}
